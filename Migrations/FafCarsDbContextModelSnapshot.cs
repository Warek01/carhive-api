// <auto-generated />
using System;
using FafCarsApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FafCarsApi.Migrations
{
    [DbContext(typeof(FafCarsDbContext))]
    partial class FafCarsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FafCarsApi.Models.Entities.Listing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("brand");

                    b.Property<int?>("Clearance")
                        .HasColumnType("integer")
                        .HasColumnName("clearance");

                    b.Property<string>("Color")
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)")
                        .HasColumnName("color");

                    b.Property<string>("EngineType")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("engine_type");

                    b.Property<double?>("EngineVolume")
                        .HasColumnType("double precision")
                        .HasColumnName("engine_volume");

                    b.Property<int?>("Horsepower")
                        .HasColumnType("integer")
                        .HasColumnName("horsepower");

                    b.Property<int?>("Mileage")
                        .HasColumnType("integer")
                        .HasColumnName("mileage");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("model");

                    b.Property<double>("Price")
                        .HasColumnType("double precision")
                        .HasColumnName("price");

                    b.Property<Guid>("PublisherId")
                        .HasColumnType("uuid")
                        .HasColumnName("publisher_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("type");

                    b.Property<int?>("WheelSize")
                        .HasColumnType("integer")
                        .HasColumnName("wheel_size");

                    b.Property<int?>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("listings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("422bc1b8-fc32-4d39-acaa-a691c493084d"),
                            BrandName = "BMW",
                            Clearance = 210,
                            Color = "#FFFFFF",
                            EngineType = "Petrol",
                            EngineVolume = 3.0,
                            Horsepower = 300,
                            Mileage = 15000,
                            ModelName = "X5",
                            Price = 35000.0,
                            PublisherId = new Guid("056178af-552b-48d0-9eb2-2d48cacfd30d"),
                            Type = "SUV",
                            WheelSize = 20,
                            Year = 2018
                        },
                        new
                        {
                            Id = new Guid("6002f869-1c13-4295-9f09-03dba361c7cf"),
                            BrandName = "Toyota",
                            Clearance = 170,
                            Color = "#007A5E",
                            EngineType = "Hybrid",
                            EngineVolume = 2.5,
                            Horsepower = 208,
                            Mileage = 10000,
                            ModelName = "Camry",
                            Price = 25000.0,
                            PublisherId = new Guid("056178af-552b-48d0-9eb2-2d48cacfd30d"),
                            Type = "Sedan",
                            WheelSize = 18,
                            Year = 2020
                        },
                        new
                        {
                            Id = new Guid("04b21f12-8af0-4439-bf8c-a3ccdb813a5c"),
                            BrandName = "Ford",
                            Clearance = 230,
                            Color = "#FF0000",
                            EngineType = "Gasoline",
                            EngineVolume = 3.5,
                            Horsepower = 375,
                            Mileage = 25000,
                            ModelName = "F-150",
                            Price = 30000.0,
                            PublisherId = new Guid("056178af-552b-48d0-9eb2-2d48cacfd30d"),
                            Type = "Truck",
                            WheelSize = 17,
                            Year = 2019
                        },
                        new
                        {
                            Id = new Guid("d9cdcd3d-58d6-4931-8ca9-ff80c7a0c7bd"),
                            BrandName = "Honda",
                            Clearance = 160,
                            Color = "#002366",
                            EngineType = "Gasoline",
                            EngineVolume = 1.8,
                            Horsepower = 174,
                            Mileage = 20000,
                            ModelName = "Civic",
                            Price = 18000.0,
                            PublisherId = new Guid("056178af-552b-48d0-9eb2-2d48cacfd30d"),
                            Type = "Sedan",
                            WheelSize = 16,
                            Year = 2017
                        },
                        new
                        {
                            Id = new Guid("5f67f9aa-96a6-42f9-8cf6-0b2fa772e991"),
                            BrandName = "Mercedes-Benz",
                            Clearance = 180,
                            Color = "#1C1C1C",
                            EngineType = "Diesel",
                            EngineVolume = 2.0,
                            Horsepower = 240,
                            Mileage = 18000,
                            ModelName = "E-Class",
                            Price = 40000.0,
                            PublisherId = new Guid("056178af-552b-48d0-9eb2-2d48cacfd30d"),
                            Type = "Sedan",
                            WheelSize = 18,
                            Year = 2019
                        },
                        new
                        {
                            Id = new Guid("1be84b58-187e-4147-ac71-fca3874cbac6"),
                            BrandName = "Chevrolet",
                            Clearance = 250,
                            Color = "#800000",
                            EngineType = "Gasoline",
                            EngineVolume = 5.2999999999999998,
                            Horsepower = 355,
                            Mileage = 12000,
                            ModelName = "Silverado",
                            Price = 38000.0,
                            PublisherId = new Guid("056178af-552b-48d0-9eb2-2d48cacfd30d"),
                            Type = "Truck",
                            WheelSize = 20,
                            Year = 2021
                        });
                });

            modelBuilder.Entity("FafCarsApi.Models.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("056178af-552b-48d0-9eb2-2d48cacfd30d"),
                            Password = "warek",
                            Username = "warek"
                        },
                        new
                        {
                            Id = new Guid("fb5b1560-f545-41fe-b735-f92ed459e8be"),
                            Password = "denis",
                            Username = "denis"
                        });
                });

            modelBuilder.Entity("FafCarsApi.Models.Entities.Listing", b =>
                {
                    b.HasOne("FafCarsApi.Models.Entities.User", "Publisher")
                        .WithMany("Listings")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("FafCarsApi.Models.Entities.User", b =>
                {
                    b.Navigation("Listings");
                });
#pragma warning restore 612, 618
        }
    }
}
